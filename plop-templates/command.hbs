import {Command} from '@oclif/core'
import {baseGrowthBookCliFlags} from '../../utils/cli'
import {DEFAULT_GROWTHBOOK_BASE_URL, DEFAULT_GROWTHBOOK_PROFILE} from '../../utils/constants'
import {getGrowthBookProfileConfigAndThrowForCommand} from '../../utils/config'

export default class {{pascalCase namespace}}{{pascalCase command}} extends Command {
  static description = '{{description}}'

  static examples = [
    '<%= config.bin %> <%= command.id %>',
  ]

  static flags = {
    ...baseGrowthBookCliFlags,
  }

  static args = {}

  async run(): Promise<void> {
    const {
      args: {},
      flags: {
        profile,
        apiBaseUrl,
      },
    } = await this.parse({{pascalCase namespace}}{{pascalCase command}})
    const profileUsed = profile || DEFAULT_GROWTHBOOK_PROFILE
    const {apiKey, apiBaseUrl: configApiBaseUrl} = getGrowthBookProfileConfigAndThrowForCommand(profileUsed, this)
    const baseUrlUsed = apiBaseUrl || configApiBaseUrl || DEFAULT_GROWTHBOOK_BASE_URL

    // TODO: Delete this
    this.log(`hello from command {{kebabCase namespace}}:{{kebabCase command}} - flags: profile = ${profileUsed}, base URL = ${baseUrlUsed}, API key = ${[...apiKey].map((c, i) => i >= 10 ? 'â€¢' : c).join('')}`)
    this.log(`Run the following command for details: \n $ growthbook ${this.id} --help`)
  }
}
